datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal
  imageUrl    String?
  category    Category    @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orderItems  OrderItem[]
  salesCount  Int         @default(0)
  rating      Float       @default(5.0)
  createdAt   DateTime    @default(now())
}

model Order {
  id                    Int                 @id @default(autoincrement())
  orderNumber           String              @unique
  name                  String
  email                 String
  city                  String
  postalCode            String
  shippingAddress       String
  totalAmount           Decimal
  status                OrderStatus         @default(PENDING)
  paymentUrl            String?
  midtransTransactionId String?
  items                 OrderItem[]
  payment               Payment?
  emailNotifications    EmailNotification[]
  createdAt             DateTime            @default(now())
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Decimal
  createdAt DateTime @default(now())
}

model Payment {
  id                    Int           @id @default(autoincrement())
  order                 Order         @relation(fields: [orderId], references: [id])
  orderId               Int           @unique
  midtransTransactionId String        @unique
  paymentMethod         String
  amount                Decimal
  status                PaymentStatus @default(PENDING)
  paidAt                DateTime?
  createdAt             DateTime      @default(now())
}

model EmailNotification {
  id             Int         @id @default(autoincrement())
  order          Order       @relation(fields: [orderId], references: [id])
  orderId        Int
  recipientEmail String
  subject        String
  message        String
  status         EmailStatus @default(PENDING)
  createdAt      DateTime    @default(now())
  sentAt         DateTime?
}

enum OrderStatus {
  PENDING
  PAID
  FAILED
  CANCELED
  SHIPPED
  DELIVERED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum EmailStatus {
  PENDING
  SENT
  FAILED
}
